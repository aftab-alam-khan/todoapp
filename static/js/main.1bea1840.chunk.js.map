{"version":3,"sources":["ToDo.tsx","loadingData.tsx","localDataStorage/localDataStorage.tsx","hooks/fetchDataBase.tsx","img/loading.gif","App.tsx","hooks/saveDataBase.tsx","hooks/changeTitle.tsx","index.tsx"],"names":["ToDo","props","style","textDecoration","done","fontWeight","wordWrap","onClick","completed","id","text","LoadingImage","className","src","imageSrc","alt","saveToFarDistantDatabase","key","param","a","Promise","resolve","setTimeout","localStorage","setItem","JSON","stringify","fetchFromFarDistantDatabase","data","getItem","parse","dataArrayKeys","retrieveDatabase","map","dataKey","all","App","console","log","imageLoading","useState","inputText","setInputText","toDoLists","setToDoLists","deleteListItem","setdeleteListItem","loading","setLoading","disabledButton","length","disabledReset","useEffect","fetchDataBase","then","useUpdateDataBase","document","title","useUpdateTitle","onSubmit","event","preventDefault","type","name","placeholder","onChange","target","value","disabled","toDoList","index","includes","rawdeleteListItem","filter","item","indexOf","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.1bea1840.chunk.js","sourcesContent":["\ninterface propsInterface{\n    text: string,\n    completed: any,\n    id: number,\n    done: boolean\n}\n\nconst ToDo = (props: propsInterface) => {\n\n    const strikeOut = () => {\n        props.completed(props.id);\n    };\n\n    return (\n        \n        <li style={{\n            textDecoration: props.done ? 'line-through': '',\n            fontWeight: props.done ? 'bolder' : 'normal',\n            wordWrap: \"break-word\",\n            }} onClick={strikeOut}>{props.text}</li> )\n};\n\nexport default ToDo;\n","\ninterface propsInterface {\n    imageSrc: string\n}\n\nconst LoadingImage = (props: propsInterface) => {\n\n    return (\n\n        <div>\n            <p className='loadingMessage'>Please wait we are looking your ToDos list</p>\n            <img src={props.imageSrc} alt=\"img\" /></div>)\n};\n\nexport default LoadingImage;\n","type PossibleItemTypes = string | number\n\nexport async function saveToFarDistantDatabase(key: string, param: any) {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      localStorage.setItem(key, JSON.stringify(param));\n      resolve(null);\n    }, 1000);\n  });\n};\n\nexport async function fetchFromFarDistantDatabase<ItemType extends PossibleItemTypes>(key: string): Promise<ItemType[]> {\n  return new Promise((resolve) => {\n    setTimeout(() => {\n      const data: any = localStorage.getItem(key)\n      if (data) {\n        resolve(JSON.parse(data));\n      } else {\n        resolve([])\n      }\n    }, 1000);\n  });\n}\n","import { fetchFromFarDistantDatabase } from '../localDataStorage/localDataStorage';\n\ntype PossibleItemTypes = number[] | string[]\n\nexport async function fetchDataBase<item extends PossibleItemTypes>(dataArrayKeys:any): Promise<item[]> {\n    const retrieveDatabase = dataArrayKeys.map((dataKey:any) => fetchFromFarDistantDatabase(dataKey))\n    return await Promise.all(retrieveDatabase);\n}","export default __webpack_public_path__ + \"static/media/loading.5e01ee79.gif\";","import { useState, useEffect } from 'react';\nimport './index.css'\nimport ToDo from './ToDo';\nimport LoadingImage from './loadingData'\nimport { useUpdateTitle } from './hooks/changeTitle';\nimport { useUpdateDataBase } from './hooks/saveDataBase';\nimport { fetchDataBase } from './hooks/fetchDataBase';\nimport imageLoading from './img/loading.gif'\n\nfunction App() {\n\n  console.log('imageLoading',imageLoading);\n  \n\n  const [inputText, setInputText] = useState('');\n  const [toDoLists, setToDoLists] = useState<string[]>([]);\n  const [deleteListItem, setdeleteListItem] = useState<number[]>([]);\n  const [loading, setLoading] = useState(true)\n  let disabledButton = (inputText.length === 0);\n  let disabledReset = (deleteListItem.length === 0);\n\n  useEffect(() => {\n    \n    fetchDataBase(['our-item-key', 'delete-item-key'])\n      .then((data) => {\n\n        const toDoLists: any = data[0];\n        const deleteListItem: any = data[1];\n        \n        setToDoLists(toDoLists);\n        setdeleteListItem(deleteListItem);\n        setLoading(false)\n      });\n  }, [])\n  \n  useUpdateDataBase(toDoLists, deleteListItem, loading);\n\n  useUpdateTitle(toDoLists, deleteListItem);\n  \n\n  return (\n    <div className='list'>\n      <h2>Todo List</h2>\n      <form onSubmit={(event) => {\n        event.preventDefault();\n        setToDoLists([...toDoLists, inputText])\n        setInputText('');\n      }}>\n        <div className='formData'>\n          <input type='text' name='todo' placeholder='Enter your todos' onChange={(event) => {\n            setInputText(event.target.value);\n          }} value={inputText}></input>\n          <button disabled={disabledButton}>Add ToDo</button>\n        </div>\n      </form>\n      {loading ? (<LoadingImage imageSrc={imageLoading} />) : (\n        <ul>\n              {\n                toDoLists.map((toDoList, index) =>\n                  <ToDo key={index} text={toDoList} id={index}\n                    done={deleteListItem.includes(index)}\n                    completed={(id: number) => {\n                      if (deleteListItem.includes(index)) {\n\n                        const rawdeleteListItem = deleteListItem.filter(item => item !== id);\n                        setdeleteListItem([...rawdeleteListItem])\n                      } else {\n                        setdeleteListItem([...deleteListItem, id])\n                      }\n                    }} />\n                )\n              }\n            </ul>\n        \n      )}\n      <button id='delete' disabled={disabledReset} onClick={() => {\n\n        const rawdeleteListItem = toDoLists.filter((item, index) => deleteListItem.indexOf(index) === -1)\n        setToDoLists([...rawdeleteListItem])\n        setdeleteListItem([])\n      }\n      }>Delete</button>\n    </div>\n  );\n}\n\nexport default App;\n","import { useEffect } from 'react';\nimport { saveToFarDistantDatabase } from '../localDataStorage/localDataStorage';\n\nexport function useUpdateDataBase(toDoLists: string[], deleteListItem: number[], loading:boolean) {\n    useEffect((): any => {\n        if (!loading) {\n            saveToFarDistantDatabase('our-item-key', toDoLists);\n            saveToFarDistantDatabase('delete-item-key', deleteListItem);\n        }\n\n    }, [toDoLists, deleteListItem, loading]);\n}","import { useEffect } from 'react';\n\nexport function useUpdateTitle(toDoLists: string[], deleteListItem: number[]) {\n    useEffect((): any => {\n\n        if (toDoLists.length) {\n            if (deleteListItem.length) {\n                document.title = `ToDo ${toDoLists.length} (${deleteListItem.length})`;\n            } else {\n                document.title = `ToDo ${toDoLists.length}`;\n            }\n        } else {\n            document.title = `ToDo`;\n        }\n    }, [toDoLists, deleteListItem]);\n}","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n"],"sourceRoot":""}